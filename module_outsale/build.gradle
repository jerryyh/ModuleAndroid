if (Boolean.valueOf(rootProject.ext.moduleOutSale)) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
//apply plugin: 'me.tatarka.retrolambda'  //lambda配置
//apply plugin: 'com.android.databinding'
apply plugin: 'com.jakewharton.butterknife'
//apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion


    defaultConfig {
        multiDexEnabled true
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        //强制前缀
        resourcePrefix "mall_"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    /*java插件引入了一个概念叫做SourceSets，通过修改SourceSets中的属性，可以指定哪些源文件
          （或文件夹下的源文件）要被编译，哪些源文件要被排除。*/
    sourceSets {
        main {
            if (rootProject.ext.moduleOutSale) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //排除java/debug文件夹下的所有文件
                    exclude '*module'
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility org.gradle.api.JavaVersion.VERSION_1_8
        targetCompatibility org.gradle.api.JavaVersion.VERSION_1_8
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api rootProject.ext.dependencies["constraint_layout"]
    testApi rootProject.ext.dependencies["junit"]
    api rootProject.ext.dependencies["appcompat_v7"]
    androidTestApi rootProject.ext.dependencies["runner"]
    androidTestApi rootProject.ext.dependencies["espresso_core"]
    annotationProcessor rootProject.ext.dependencies["arouter_compiler"]
    implementation project(':comment_basic')
    implementation project(':comment_data')
    //黄油刀
    annotationProcessor rootProject.ext.dependencies["butterknife_compiler"]
//    api rootProject.ext.dependencies["dagger"]
//    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
//    api rootProject.ext.dependencies["javax-annotation"]

    implementation rootProject.ext.dependencies["dagger"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]

    api rootProject.ext.dependencies["bottom-navigation-bar"]

//    implementation rootProject.ext.dependencies["dagger-android"]
//    implementation rootProject.ext.dependencies["dagger-android-support"]
//    annotationProcessor rootProject.ext.dependencies["dagger-android-processor"]
//    implementation rootProject.ext.dependencies["javax-annotation"]
}
